{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/entities/Turret.ts","webpack:///./src/entities/Divisor.ts","webpack:///./src/entities/Fee.ts","webpack:///./src/App.vue","webpack:///./src/components/turret/TurretForm.vue","webpack:///./src/components/common/Card.vue","webpack:///./src/components/common/Card.vue?112d","webpack:///./src/components/common/Card.vue?c7fc","webpack:///./src/components/turret/contracts/TurretContract.vue","webpack:///./src/components/turret/contracts/TurretContract.vue?cf8e","webpack:///./src/components/turret/contracts/TurretContract.vue?de8b","webpack:///./src/mappers/turretMapper.ts","webpack:///./src/helpers/stellarHelper.ts","webpack:///./src/errors/TurretHttpError.ts","webpack:///./src/services/turret/turret.ts","webpack:///./src/components/common/AppButton.vue","webpack:///./src/components/common/AppButton.vue?7817","webpack:///./src/components/common/AppButton.vue?59a8","webpack:///./src/components/turret/TurretForm.vue?eba3","webpack:///./src/components/turret/TurretForm.vue?bca7","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/store/index.ts","webpack:///./src/views/UploadContract.vue","webpack:///./src/components/turret/contracts/TurretFields.vue","webpack:///./src/entities/Contracts/Field.ts","webpack:///./src/components/common/form/AppInput.vue","webpack:///./src/components/common/form/AppInput.vue?aa13","webpack:///./src/components/common/form/AppInput.vue?4f97","webpack:///./src/components/turret/contracts/TurretFieldsTable.vue","webpack:///./src/components/turret/contracts/TurretFieldsTable.vue?7cbe","webpack:///./src/components/turret/contracts/TurretFieldsTable.vue?db5f","webpack:///./src/components/turret/contracts/TurretFields.vue?3658","webpack:///./src/components/turret/contracts/TurretFields.vue?c76b","webpack:///./src/entities/Contracts/Contract.ts","webpack:///./src/services/turret/contract.ts","webpack:///./src/views/UploadContract.vue?4743","webpack:///./src/views/UploadContract.vue?9044","webpack:///./src/views/CreateXdrToken.vue","webpack:///./src/entities/XdrToken.ts","webpack:///./src/components/turret/fee-balance/FeeBalanceInfo.vue","webpack:///./src/components/turret/fee-balance/FeeBalanceInfo.vue?d413","webpack:///./src/components/turret/fee-balance/FeeBalanceInfo.vue?2977","webpack:///./src/components/turret/xdr-token/XdrTokenForm.vue","webpack:///./src/components/common/JsonTreeView.vue","webpack:///./src/components/common/JsonTreeView.vue?5fe2","webpack:///./src/components/common/JsonTreeView.vue?47f4","webpack:///./src/components/turret/xdr-token/XdrTokenForm.vue?fd06","webpack:///./src/components/turret/xdr-token/XdrTokenForm.vue?d90c","webpack:///./src/helpers/domHelper.ts","webpack:///./src/views/CreateXdrToken.vue?badb","webpack:///./src/views/CreateXdrToken.vue?adc4","webpack:///./src/views/ManageTurretFunds.vue","webpack:///./src/components/turret/payment/PaymentInfo.vue","webpack:///./src/components/turret/payment/PaymentInfo.vue?3613","webpack:///./src/components/turret/payment/PaymentInfo.vue?1b52","webpack:///./src/entities/FeeBalance.ts","webpack:///./src/entities/Payment.ts","webpack:///./src/views/ManageTurretFunds.vue?3a7d","webpack:///./src/views/ManageTurretFunds.vue?2cf0","webpack:///./src/views/TxFunctions.vue","webpack:///./src/services/turret/function.ts","webpack:///./src/entities/TxFunction.ts","webpack:///./src/components/turret/contracts/TurretUrlList.vue","webpack:///./src/components/turret/contracts/TurretUrlList.vue?84e5","webpack:///./src/components/turret/contracts/TurretUrlList.vue?341c","webpack:///./src/views/TxFunctions.vue?0566","webpack:///./src/views/TxFunctions.vue?3a40","webpack:///./src/router/index.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Turret","url","turret","network","horizon","runner","version","fee","divisor","toml","contract","plus","this","calculateContractLengthFee","calculateFieldsFee","toFixed","txFunction","Number","upload","base64","btoa","JSON","stringify","txFunctionFields","buffer","Buffer","from","run","createNull","Divisor","Fee","min","max","class","for","id","setTurret","$store","state","privateKey","type","getters","keypair","publicKey","to","action","loadTurret","turretUrl","isLoading","href","showDetails","render","enctype","loadContract","contractCode","files","document","querySelector","file","reader","FileReader","readAsText","onload","evt","target","toString","$emit","onerror","console","error","components","Card","emits","props","mapTurret","turretData","getStellarPassphrase","TESTNET","PUBLIC","Error","json","parse","getTurret","Promise","all","fetch","responses","turretResponse","tomlResponse","text","generateXdr","keyPair","isSingleUse","ttl","txFunctionHashes","pk","server","fetchBaseFee","txBuilder","networkPassphrase","hash","addOperation","manageData","tx","setTimeout","build","sign","toEnvelope","toXDR","fundTurret","fundedKeyPair","fundingKeyPair","amount","loadAccount","payment","source","asset","native","destination","method","body","txFunctionFee","ok","getFeeBalance","xdrToken","headers","Authorization","AppButton","TurretContract","commit","TurretForm","VUE_APP_PRIVATE_KEY","mutations","actions","fromSecret","ref","handleFieldsUpdated","handleContractCodeLoaded","fieldsFee","contractLengthFee","uploadFee","handleUploadTx","txFunctionFeeXdr","cols","rows","isUploading","uploadResponse","editableField","label","description","rule","rules","Optional","Required","saveField","editing","fields","field","editField","deleteField","RuleTypes","Field","inputId","modelValue","$event","match","join","toLowerCase","String","required","scope","showActions","Array","Boolean","default","currentField","find","f","TurretFieldsTable","AppInput","Contract","getUploadTxXdr","secretKey","calculateUploadFee","uploadContract","formData","FormData","append","response","JSONTreeView","Proxy","treeView","$refs","innerHTML","appendChild","dom","TurretFields","watch","deep","handler","handleXdrTokenCreated","xdrTokenRaw","transaction-fee","createXdrTokenError","lastModifiedTime","singleUse","XdrToken","transactionFee","balance","Date","fnHash","saveFunctionHash","newFunctionHash","newFunctionHashError","functionHashes","deleteFunctionHash","ttlError","createXdrToken","isCreatingXdr","requestError","$nextTick","renderJson","placeholder","readonly","isNaN","findIndex","h","token","JsonTreeView","scrollToBottom","scrollTo","scrollHeight","rawXdrToken","txFeeData","FeeBalanceInfo","XdrTokenForm","createXdr","fetchTransactionFee","isFetching","fetchError","publicKeyToFund","isProcessingPayment","paymentHash","paymentError","feeBalance","is-loading","show-actions","handleFundingFromFeeBalanceInfo","FeeBalance","Payment","kp","PaymentInfo","txFunctionHash","getTxFunction","signer","getTxFunctionError","txFunctionRunParams","turretsUrls","deleteTurretUrl","editTurretUrl","editableTurretUrl","saveTurretUrl","isEditingTurretUrl","runTxFunction","isRunning","resultingTxRunXdr","tmpFunction","function","turretsUrl","txFunctionParams","fetchTxFunctions","map","then","xdrs","transaction","xdr","forEach","addSignature","signature","TxFunction","editIndex","indexOf","finalTurretUrls","message","TurretUrlList","routes","path","component","router","history","App","use","store","mount"],"mappings":"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","file":"js/app.2154434e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/tss-admin/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import Fee from \"@/entities/Fee\";\nimport Divisor from \"@/entities/Divisor\";\nimport Contract from \"@/entities/Contracts/Contract\";\nimport BigNumber from \"bignumber.js\";\n\nexport default class Turret {\n  public toml = \"\";\n\n  public constructor(\n    public url: string,\n    public turret: string,\n    public network: string,\n    public horizon: string,\n    public runner: string,\n    public version: string,\n    public fee: Fee,\n    public divisor: Divisor\n  ) {}\n\n  public static createNull(): Turret {\n    return new Turret(\n      \"\",\n      \"\",\n      \"\",\n      \"\",\n      \"\",\n      \"\",\n      Fee.createNull(),\n      Divisor.createNull()\n    );\n  }\n\n  public calculateUploadFee(contract: Contract): string {\n    return new BigNumber(0)\n      .plus(this.calculateContractLengthFee(contract))\n      .plus(this.calculateFieldsFee(contract))\n      .toFixed(7);\n  }\n\n  public calculateContractLengthFee(contract: Contract): number {\n    return contract.txFunction.length / Number(this.divisor.upload);\n  }\n\n  public calculateFieldsFee(contract: Contract): number {\n    const base64 = btoa(JSON.stringify(contract.txFunctionFields));\n    const buffer = Buffer.from(base64, \"base64\");\n    return buffer.length / Number(this.divisor.upload);\n  }\n\n  public calculateRunFee(): number {\n    return Number(this.divisor.run);\n  }\n}\n","export default class Divisor {\r\n  public constructor(\r\n    public upload: string,\r\n    public run: string\r\n  ) {\r\n  }\r\n\r\n  public static createNull(): Divisor {\r\n    return new Divisor(\"\", \"\");\r\n  }\r\n}","export default class Fee {\n  public constructor(public min: string, public max: string) {}\n\n  public static createNull(): Fee {\n    return new Fee(\"\", \"\");\n  }\n}\n","<template>\n  <div class=\"home m-10\">\n    <TurretForm @loaded=\"setTurret\" />\n\n    <Card>\n      <label for=\"private-key\">\n        <span class=\"block text-gray-700 text-sm font-bold mb-2\">\n          Private key (this will be used to create your XDR token and fund\n          turrets)\n        </span>\n        <input\n          id=\"private-key\"\n          v-model=\"$store.state.privateKey\"\n          class=\"\n            shadow\n            appearance-none\n            border\n            rounded\n            w-full\n            py-2\n            px-3\n            text-gray-700\n            leading-tight\n            focus:outline-none focus:shadow-outline\n          \"\n          type=\"text\"\n        />\n        <span class=\"block text-gray-700 text-sm font-bold mb-2\">\n          Public key\n          {{ $store.getters.keypair.publicKey() }}\n        </span>\n      </label>\n    </Card>\n    <div id=\"turret-ops\" class=\"mb-5\">\n      <router-link to=\"/\">\n        <AppButton class=\"mr-2\">Upload contract</AppButton>\n      </router-link>\n      <router-link to=\"/xdr-token\">\n        <AppButton class=\"mr-2\">Create XDR Token</AppButton>\n      </router-link>\n      <router-link to=\"/turret-funds\">\n        <AppButton class=\"mr-2\">Manage Turret funds</AppButton>\n      </router-link>\n      <router-link to=\"/tx-functions\">\n        <AppButton class=\"mr-2\">View & Run functions</AppButton>\n      </router-link>\n    </div>\n    <router-view v-if=\"turret.turret && $store.state.privateKey\" />\n    <p v-else>\n      Waiting for turret information to be loaded and private key to be entered\n    </p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport TurretForm from \"@/components/turret/TurretForm.vue\";\nimport Turret from \"@/entities/Turret\"; // @ is an alias to /src\nimport Card from \"@/components/common/Card.vue\";\nimport AppButton from \"@/components/common/AppButton.vue\";\n\n@Options({\n  components: {\n    AppButton,\n    TurretForm,\n    Card,\n  },\n})\nexport default class Home extends Vue {\n  private turret: Turret = Turret.createNull();\n\n  setTurret(turret: Turret): void {\n    this.$store.commit(\"setTurret\", turret);\n    this.turret = turret;\n  }\n}\n</script>\n","<template>\n  <Card>\n    <form action=\"#\" @submit.prevent=\"loadTurret\">\n      <label for=\"turret-url\">\n        <span class=\"block text-gray-700 text-sm font-bold mb-2\">\n          Turret url\n        </span>\n        <input\n          id=\"turret-url\"\n          v-model=\"turretUrl\"\n          class=\"\n            shadow\n            appearance-none\n            border\n            rounded\n            w-full\n            py-2\n            px-3\n            text-gray-700\n            leading-tight\n            focus:outline-none focus:shadow-outline\n          \"\n          type=\"text\"\n        />\n      </label>\n      <AppButton @click=\"loadTurret\">\n        {{ isLoading ? \"Loading...\" : \"Fetch\" }}\n      </AppButton>\n    </form>\n    <p v-if=\"turret.turret !== ''\">\n      <strong>Loaded turret {{ turret.turret }}</strong>\n      <br />\n      <a href=\"#\" @click.prevent=\"this.showDetails = !this.showDetails\">\n        {{ this.showDetails ? \"Hide details\" : \"Show details\" }}\n      </a>\n    </p>\n  </Card>\n  <div v-if=\"showDetails\" class=\"turret\">\n    <Card>\n      <p>\n        Turret address: <strong>{{ turret.turret }}</strong>\n      </p>\n      <p>\n        Turret url: <strong>{{ turret.url }}</strong>\n      </p>\n      <p>\n        Turret network: <strong>{{ turret.network }}</strong>\n      </p>\n      <p>\n        Horizon url:\n        <a :href=\"turret.horizon\" class=\"underline\"\n          ><strong>{{ turret.horizon }}</strong></a\n        >\n      </p>\n      <p>\n        Runner:\n        <a :href=\"turret.runner\" class=\"underline\"\n          ><strong>{{ turret.runner }}</strong></a\n        >\n      </p>\n      <p>\n        Version: <strong>{{ turret.version }}</strong>\n      </p>\n      <div class=\"fee\">\n        <h2>Fee</h2>\n        <p>\n          Min: <strong>{{ turret.fee.min }}</strong>\n        </p>\n        <p>\n          Max: <strong>{{ turret.fee.max }}</strong>\n        </p>\n      </div>\n\n      <div class=\"divisor\">\n        <h2>Divisor</h2>\n        <p>\n          Upload: <strong>{{ turret.divisor.upload }}</strong>\n        </p>\n        <p>\n          Run: <strong>{{ turret.divisor.run }}</strong>\n        </p>\n      </div>\n\n      <div class=\"toml\">\n        <pre>{{ turret.toml }}</pre>\n      </div>\n    </Card>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport Turret from \"@/entities/Turret\";\nimport Card from \"@/components/common/Card.vue\";\nimport TurretContract from \"@/components/turret/contracts/TurretContract.vue\";\nimport { getTurret } from \"@/services/turret/turret\";\nimport AppButton from \"@/components/common/AppButton.vue\";\n\n@Options({\n  components: { AppButton, TurretContract, Card },\n  emits: [\"loaded\"],\n})\nexport default class TurretForm extends Vue {\n  private turretUrl =\n    \"https://stellar-turrets-testnet.sdf-ecosystem.workers.dev\";\n  private turret = Turret.createNull();\n  private showDetails = false;\n  private isLoading = false;\n\n  async loadTurret(): Promise<void> {\n    this.isLoading = true;\n    this.turret = await getTurret(this.turretUrl);\n    this.$emit(\"loaded\", this.turret);\n    this.isLoading = false;\n  }\n}\n</script>\n","<template>\n  <div\n    class=\"\n      bg-white\n      border-2 border-gray-300\n      shadow-xl\n      rounded\n      px-8\n      pt-6\n      pb-8\n      mb-8\n    \"\n  >\n    <slot></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Vue } from \"vue-class-component\";\n\nexport default class Card extends Vue {}\n</script>\n","\nimport { Vue } from \"vue-class-component\";\n\nexport default class Card extends Vue {}\n","import { render } from \"./Card.vue?vue&type=template&id=a9b12cfe\"\nimport script from \"./Card.vue?vue&type=script&lang=ts\"\nexport * from \"./Card.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n    <Card>\n      <form enctype=\"multipart/form-data\">\n        <label for=\"contract\">\n          <span class=\"block text-gray-700 text-sm font-bold mb-2\">\n            Contract\n          </span>\n          <input\n            id=\"contract\"\n            class=\"\n              shadow\n              appearance-none\n              border\n              rounded\n              w-full\n              py-2\n              px-3\n              text-gray-700\n              leading-tight\n              focus:outline-none focus:shadow-outline\n            \"\n            type=\"file\"\n            @change=\"loadContract\"\n          />\n        </label>\n      </form>\n    </Card>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport Turret from \"@/entities/Turret\";\nimport Card from \"@/components/common/Card.vue\";\n\n@Options({\n  components: { Card },\n  emits: [\"loaded\"],\n  props: {\n    turret: {\n      type: Turret,\n    },\n  },\n})\nexport default class TurretContract extends Vue {\n  private contractCode = \"\";\n\n  loadContract(): void {\n    const files = (document.querySelector(\"#contract\") as HTMLInputElement)\n      .files;\n\n    const file = files ? files[0] : null;\n    if (file) {\n      const reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = (evt) => {\n        if (!evt.target?.result) {\n          return;\n        }\n        this.contractCode = evt.target.result.toString();\n        this.$emit(\"loaded\", this.contractCode);\n      };\n      reader.onerror = function (evt) {\n        console.error(evt);\n      };\n    }\n  }\n}\n</script>\n","\nimport { Options, Vue } from \"vue-class-component\";\nimport Turret from \"@/entities/Turret\";\nimport Card from \"@/components/common/Card.vue\";\n\n@Options({\n  components: { Card },\n  emits: [\"loaded\"],\n  props: {\n    turret: {\n      type: Turret,\n    },\n  },\n})\nexport default class TurretContract extends Vue {\n  private contractCode = \"\";\n\n  loadContract(): void {\n    const files = (document.querySelector(\"#contract\") as HTMLInputElement)\n      .files;\n\n    const file = files ? files[0] : null;\n    if (file) {\n      const reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = (evt) => {\n        if (!evt.target?.result) {\n          return;\n        }\n        this.contractCode = evt.target.result.toString();\n        this.$emit(\"loaded\", this.contractCode);\n      };\n      reader.onerror = function (evt) {\n        console.error(evt);\n      };\n    }\n  }\n}\n","import { render } from \"./TurretContract.vue?vue&type=template&id=5d310f46\"\nimport script from \"./TurretContract.vue?vue&type=script&lang=ts\"\nexport * from \"./TurretContract.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import Turret from \"@/entities/Turret\";\nimport Divisor from \"@/entities/Divisor\";\nimport ITurret from \"@/entities/ITurret\";\nimport Fee from \"@/entities/Fee\";\n\nexport default function mapTurret(turretData: ITurret, url: string): Turret {\n  const { upload, run } = turretData.divisor;\n  const { min, max } = turretData.fee;\n  return new Turret(\n    url,\n    turretData.turret,\n    turretData.network,\n    turretData.horizon,\n    turretData.runner,\n    turretData.version,\n    new Fee(min, max),\n    new Divisor(upload, run)\n  );\n}\n","import { Networks } from \"stellar-sdk\";\n\nexport function getStellarPassphrase(network: string): Networks {\n  switch (network) {\n    case \"TESTNET\":\n      return Networks.TESTNET;\n    case \"PUBLIC\":\n      return Networks.PUBLIC;\n    default:\n      throw new Error(`Unknown network ${network}`);\n  }\n}\n","export default class TurretHttpError extends Error {\n  public json: string;\n\n  public constructor(error: string) {\n    super(error);\n    this.json = JSON.parse(error);\n  }\n}\n","import Turret from \"@/entities/Turret\";\nimport mapTurret from \"@/mappers/turretMapper\";\nimport ITurret from \"@/entities/ITurret\";\nimport {\n  Account,\n  Asset,\n  Keypair,\n  Operation,\n  Server,\n  TransactionBuilder,\n} from \"stellar-sdk\";\nimport IFeeBalance from \"@/entities/IFeeBalance\";\nimport { getStellarPassphrase } from \"@/helpers/stellarHelper\";\nimport IPayment from \"@/entities/IPayment\";\nimport TurretHttpError from \"@/errors/TurretHttpError\";\n\nexport async function getTurret(url: string): Promise<Turret> {\n  const responses = await Promise.all([\n    fetch(url),\n    fetch(`${url}/.well-known/stellar.toml`),\n  ]);\n\n  const [turretResponse, tomlResponse] = responses;\n\n  const turret = mapTurret(await turretResponse.json(), url);\n  turret.toml = await tomlResponse.text();\n\n  return turret;\n}\n\nexport async function generateXdr(\n  turret: ITurret,\n  keyPair: Keypair,\n  isSingleUse: string,\n  ttl: number,\n  txFunctionHashes: string[]\n): Promise<string> {\n  const pk = keyPair.publicKey();\n  const server = new Server(turret.horizon);\n  const fee = await server.fetchBaseFee();\n\n  const txBuilder = new TransactionBuilder(new Account(pk, \"-1\"), {\n    fee: fee.toString(),\n    networkPassphrase: getStellarPassphrase(turret.network),\n  });\n\n  for (const hash of txFunctionHashes) {\n    txBuilder.addOperation(\n      Operation.manageData({\n        name: \"txFunctionHash\",\n        value: hash,\n      })\n    );\n  }\n\n  txBuilder.addOperation(\n    Operation.manageData({\n      name: \"singleUse\",\n      value: isSingleUse,\n    })\n  );\n\n  const tx = txBuilder.setTimeout(ttl).build();\n\n  tx.sign(keyPair);\n  return tx.toEnvelope().toXDR(\"base64\");\n}\n\nexport async function fundTurret(\n  turret: Turret,\n  fundedKeyPair: string,\n  fundingKeyPair: Keypair,\n  amount: string\n): Promise<IPayment> {\n  const pk = fundingKeyPair.publicKey();\n  const server = new Server(turret.horizon);\n\n  const fee = await server.fetchBaseFee();\n  const txBuilder = new TransactionBuilder(await server.loadAccount(pk), {\n    fee: fee.toString(),\n    networkPassphrase: getStellarPassphrase(turret.network),\n  });\n\n  txBuilder.addOperation(\n    Operation.payment({\n      source: pk,\n      asset: Asset.native(),\n      amount: amount,\n      destination: turret.turret,\n    })\n  );\n\n  const tx = txBuilder.setTimeout(60).build();\n  tx.sign(fundingKeyPair);\n\n  const result = await fetch(`${turret.url}/tx-fees/${fundedKeyPair}`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      txFunctionFee: tx.toXDR(),\n    }),\n  });\n\n  if (!result.ok) {\n    throw new TurretHttpError(await result.text());\n  }\n\n  return (await result.json()) as Promise<IPayment>;\n}\n\nexport async function getFeeBalance(\n  turret: Turret,\n  xdrToken: string\n): Promise<IFeeBalance> {\n  const result = await fetch(`${turret.url}/tx-fees`, {\n    headers: {\n      Authorization: `Bearer ${xdrToken}`,\n    },\n  });\n\n  if (!result.ok) {\n    throw new TurretHttpError(await result.text());\n  }\n\n  return (await result.json()) as IFeeBalance;\n}\n","<template>\n  <button\n    class=\"\n      shadow\n      bg-blue-500\n      hover:bg-blue-600\n      text-white\n      font-bold\n      focus:shadow-outline focus:outline-none\n      py-2\n      px-4\n      rounded\n    \"\n    type=\"button\"\n  >\n    <slot />\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { Vue } from \"vue-class-component\";\n\nexport default class AppInput extends Vue {}\n</script>\n","\nimport { Vue } from \"vue-class-component\";\n\nexport default class AppInput extends Vue {}\n","import { render } from \"./AppButton.vue?vue&type=template&id=5e928f2a\"\nimport script from \"./AppButton.vue?vue&type=script&lang=ts\"\nexport * from \"./AppButton.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { Options, Vue } from \"vue-class-component\";\nimport Turret from \"@/entities/Turret\";\nimport Card from \"@/components/common/Card.vue\";\nimport TurretContract from \"@/components/turret/contracts/TurretContract.vue\";\nimport { getTurret } from \"@/services/turret/turret\";\nimport AppButton from \"@/components/common/AppButton.vue\";\n\n@Options({\n  components: { AppButton, TurretContract, Card },\n  emits: [\"loaded\"],\n})\nexport default class TurretForm extends Vue {\n  private turretUrl =\n    \"https://stellar-turrets-testnet.sdf-ecosystem.workers.dev\";\n  private turret = Turret.createNull();\n  private showDetails = false;\n  private isLoading = false;\n\n  async loadTurret(): Promise<void> {\n    this.isLoading = true;\n    this.turret = await getTurret(this.turretUrl);\n    this.$emit(\"loaded\", this.turret);\n    this.isLoading = false;\n  }\n}\n","import { render } from \"./TurretForm.vue?vue&type=template&id=65919fc5\"\nimport script from \"./TurretForm.vue?vue&type=script&lang=ts\"\nexport * from \"./TurretForm.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { Options, Vue } from \"vue-class-component\";\nimport TurretForm from \"@/components/turret/TurretForm.vue\";\nimport Turret from \"@/entities/Turret\"; // @ is an alias to /src\nimport Card from \"@/components/common/Card.vue\";\nimport AppButton from \"@/components/common/AppButton.vue\";\n\n@Options({\n  components: {\n    AppButton,\n    TurretForm,\n    Card,\n  },\n})\nexport default class Home extends Vue {\n  private turret: Turret = Turret.createNull();\n\n  setTurret(turret: Turret): void {\n    this.$store.commit(\"setTurret\", turret);\n    this.turret = turret;\n  }\n}\n","import { render } from \"./App.vue?vue&type=template&id=cf37dca0\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { createStore } from \"vuex\";\nimport Turret from \"@/entities/Turret\";\nimport IState from \"@/store/IState\";\nimport { Keypair } from \"stellar-sdk\";\n\nexport default createStore<IState>({\n  state: {\n    turret: Turret.createNull(),\n    privateKey: process.env.VUE_APP_PRIVATE_KEY || \"\",\n  },\n  mutations: {\n    setTurret(state: IState, turret: Turret): void {\n      state.turret = turret;\n    },\n  },\n  actions: {},\n  modules: {},\n  getters: {\n    keypair: (state) => {\n      try {\n        return Keypair.fromSecret(state.privateKey);\n      } catch {\n        return {\n          publicKey(): string {\n            return \"\";\n          },\n        };\n      }\n    },\n  },\n});\n","<template>\n  <div class=\"upload-contract grid\">\n    <h1 class=\"text-2xl mb-5\">Upload contract</h1>\n    <Card>\n      <div>\n        <TurretFields @fields-updated=\"handleFieldsUpdated\" />\n        <TurretContract :turret=\"turret\" @loaded=\"handleContractCodeLoaded\" />\n      </div>\n    </Card>\n    <Card>\n      <div id=\"contract-info\">\n        <div class=\"mb-5\">\n          <div class=\"mb-10\">\n            <p>\n              Byte length:<strong>{{ this.contract.txFunction.length }}</strong>\n            </p>\n            <p>\n              Fields fee:\n              <strong>{{ fieldsFee }}</strong>\n            </p>\n            <p>\n              Contract length fee:\n              <strong>{{ contractLengthFee }}</strong>\n            </p>\n            <p>\n              Total upload fee:\n              <strong>{{ uploadFee }}</strong>\n            </p>\n          </div>\n          <AppButton @click.prevent=\"handleUploadTx\">\n            {{ isLoading ? \"Loading...\" : \"Get Function Fee XDR\" }}\n          </AppButton>\n          <p class=\"mt-10\">txFunctionFee transaction XDR:</p>\n          <textarea\n            v-model=\"txFunctionFeeXdr\"\n            class=\"border-2 border-blue-100\"\n            cols=\"80\"\n            rows=\"4\"\n          ></textarea>\n\n          <pre ref=\"tx-function-json-viewer\"></pre>\n        </div>\n\n        <AppButton v-if=\"txFunctionFeeXdr\" @click=\"upload\">\n          {{ isUploading ? \"Uploading...\" : \"Upload\" }}\n        </AppButton>\n\n        <pre>{{ uploadResponse }}</pre>\n\n        <p class=\"mt-4 font-bold\">Contract code</p>\n        <pre class=\"overflow-hidden overflow-clip\">\n          {{ contract.txFunction }}\n        </pre>\n      </div>\n    </Card>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport TurretForm from \"@/components/turret/TurretForm.vue\";\nimport Turret from \"@/entities/Turret\"; // @ is an alias to /src\nimport Card from \"@/components/common/Card.vue\";\nimport TurretFields from \"@/components/turret/contracts/TurretFields.vue\";\nimport TurretContract from \"@/components/turret/contracts/TurretContract.vue\";\nimport Contract from \"@/entities/Contracts/Contract\";\nimport { getUploadTxXdr, uploadContract } from \"@/services/turret/contract\";\nimport Field from \"@/entities/Contracts/Field\";\nimport AppButton from \"@/components/common/AppButton.vue\";\nimport { Transaction } from \"stellar-sdk\";\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst JSONTreeView = require(\"json-tree-view\");\n\n@Options({\n  components: {\n    AppButton,\n    TurretContract,\n    TurretFields,\n    TurretForm,\n    Card,\n  },\n  watch: {\n    contract: {\n      deep: true,\n      handler() {\n        if (this.turret.turret !== \"\") {\n          this.uploadFee = this.turret.calculateUploadFee(this.contract);\n\n          this.fieldsFee = this.turret\n            .calculateFieldsFee(this.contract)\n            .toFixed(7);\n\n          this.contractLengthFee = this.turret\n            .calculateContractLengthFee(this.contract)\n            .toFixed(7);\n        } else {\n          return \"0\";\n        }\n      },\n    },\n  },\n})\nexport default class UploadContract extends Vue {\n  private turret: Turret = new Proxy<Turret>(Turret.createNull(), {});\n  private contract: Contract = Contract.createNull();\n  private uploadFee = \"0\";\n  private contractLengthFee = \"0\";\n  private fieldsFee = \"0\";\n  private txFunctionFeeXdr = \"\";\n  private isLoading = false;\n  private isUploading = false;\n  private uploadResponse = null as unknown;\n\n  created(): void {\n    this.turret = this.$store.state.turret;\n  }\n\n  handleContractCodeLoaded(contractCode: string): void {\n    this.contract.txFunction = contractCode;\n  }\n\n  handleFieldsUpdated(fields: Field[]): void {\n    this.contract.txFunctionFields = fields;\n  }\n\n  async handleUploadTx(): Promise<void> {\n    this.isLoading = true;\n    this.contract.txFunctionFee = this.txFunctionFeeXdr = await getUploadTxXdr(\n      this.turret,\n      this.$store.state.privateKey,\n      this.contract\n    );\n\n    const tx = new Transaction(\n      this.contract.txFunctionFee,\n      this.turret.network\n    );\n    const treeView = new JSONTreeView(\n      \"txFunctionFee\",\n      JSON.parse(JSON.stringify(tx))\n    );\n    const ref = this.$refs[\"tx-function-json-viewer\"] as HTMLElement;\n    ref.innerHTML = \"\";\n    ref.appendChild(treeView.dom);\n\n    this.isLoading = false;\n  }\n\n  async upload(): Promise<void> {\n    this.isUploading = true;\n    this.uploadResponse = await uploadContract(this.turret, this.contract);\n    this.isUploading = false;\n  }\n}\n</script>\n\n<style src=\"json-tree-view/devtools.css\"></style>\n","<template>\n  <div class=\"my-5\">\n    <h2 class=\"text-xl mb-5\">Add contract field (Optional)</h2>\n    <div id=\"new-field\">\n      <form class=\"w-full max-w-sm\">\n        <AppInput v-model=\"editableField.name\" label=\"Name\" />\n        <AppInput v-model=\"editableField.type\" label=\"Type\" />\n        <AppInput v-model=\"editableField.description\" label=\"Description\" />\n        <div class=\"md:flex md:items-center mb-6\">\n          <div class=\"md:w-1/3\"></div>\n          <label class=\"md:w-2/3 block text-gray-500 font-bold\">\n            <input\n              v-model=\"editableField.rule\"\n              :value=\"rules.Optional\"\n              class=\"mr-2 leading-tight\"\n              name=\"rule-type\"\n              type=\"radio\"\n            />\n            <span class=\"text-sm\">Optional</span>\n          </label>\n          <label class=\"md:w-2/3 block text-gray-500 font-bold\">\n            <input\n              v-model=\"editableField.rule\"\n              :value=\"rules.Required\"\n              class=\"mr-2 leading-tight\"\n              name=\"rule-type\"\n              type=\"radio\"\n            />\n            <span class=\"text-sm\">Required</span>\n          </label>\n        </div>\n        <div class=\"text-center\">\n          <AppButton @click=\"saveField\" class=\"block w-full\">{{\n            editing ? \"Save\" : \"Add\"\n          }}</AppButton>\n        </div>\n      </form>\n    </div>\n    <div id=\"contract-fields\" class=\"my-10\">\n      <TurretFieldsTable\n        :fields=\"fields\"\n        @onEditField=\"(field) => editField(field)\"\n        @onDeleteField=\"(field) => deleteField(field)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport Turret from \"@/entities/Turret\";\nimport Card from \"@/components/common/Card.vue\";\nimport Field, { RuleTypes } from \"@/entities/Contracts/Field\";\nimport AppInput from \"@/components/common/form/AppInput.vue\";\nimport AppButton from \"@/components/common/AppButton.vue\";\nimport TurretFieldsTable from \"@/components/turret/contracts/TurretFieldsTable.vue\";\n\n@Options({\n  components: { TurretFieldsTable, AppButton, AppInput, Card },\n  emits: [\"fieldsUpdated\"],\n  props: {\n    turret: {\n      type: Turret,\n    },\n  },\n})\nexport default class TurretForm extends Vue {\n  private fields: Field[] = [];\n  private editableField: Field = Field.createNull();\n  private rules = RuleTypes;\n  private editing = false;\n\n  saveField(): void {\n    const { name, type, description, rule } = this.editableField;\n    const currentField = this.fields.find((f) => f === this.editableField);\n    if (currentField) {\n      currentField.name = name;\n      currentField.type = type;\n      currentField.description = description;\n      currentField.rule = rule;\n    } else {\n      this.fields = [...this.fields, new Field(name, type, description, rule)];\n    }\n\n    this.editableField = Field.createNull();\n    this.editing = false;\n    this.$emit(\"fieldsUpdated\", this.fields);\n  }\n\n  editField(field: Field): void {\n    this.editableField = field;\n    this.editing = true;\n  }\n\n  deleteField(field: Field): void {\n    for (let i = 0; i < this.fields.length; i++) {\n      if (this.fields[i] === field) {\n        this.fields.splice(i, 1);\n      }\n    }\n  }\n}\n</script>\n","export default class Field {\n  constructor(\n    public name: string,\n    public type: string,\n    public description: string,\n    public rule: RuleTypes\n  ) {}\n\n  public static createNull(): Field {\n    return new Field(\"\", \"\", \"\", RuleTypes.Optional);\n  }\n}\n\nexport enum RuleTypes {\n  Required = \"Required\",\n  Optional = \"Optional\",\n}\n","<template>\n  <div class=\"md:flex md:items-center mb-6\">\n    <div class=\"md:w-1/3\">\n      <label\n        :for=\"inputId\"\n        class=\"block text-gray-500 font-bold mb-1 md:mb-0 pr-4\"\n      >\n        {{ label }}\n      </label>\n    </div>\n    <div class=\"md:w-2/3\">\n      <input\n        :id=\"inputId\"\n        :value=\"modelValue\"\n        class=\"\n          bg-gray-200\n          appearance-none\n          border-2 border-gray-200\n          rounded\n          w-full\n          py-2\n          px-4\n          text-gray-700\n          leading-tight\n          focus:outline-none focus:bg-white focus:border-blue-500\n        \"\n        type=\"text\"\n        @change=\"$emit('update:modelValue', $event.target.value)\"\n        @input=\"$emit('update:modelValue', $event.target.value)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  emits: [\"update:modelValue\"],\n  props: {\n    label: {\n      type: String,\n      required: true,\n    },\n    modelValue: String,\n  },\n})\nexport default class AppInput extends Vue {\n  private label = \"\";\n\n  get inputId(): string {\n    const match = this.label.match(/[a-z]+[a-z0-9]/gi);\n    if (match === null) {\n      throw new Error(\"Label must contain letters\");\n    }\n    return \"contract-input-\" + match.join(\"\").toLowerCase();\n  }\n}\n</script>\n","\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  emits: [\"update:modelValue\"],\n  props: {\n    label: {\n      type: String,\n      required: true,\n    },\n    modelValue: String,\n  },\n})\nexport default class AppInput extends Vue {\n  private label = \"\";\n\n  get inputId(): string {\n    const match = this.label.match(/[a-z]+[a-z0-9]/gi);\n    if (match === null) {\n      throw new Error(\"Label must contain letters\");\n    }\n    return \"contract-input-\" + match.join(\"\").toLowerCase();\n  }\n}\n","import { render } from \"./AppInput.vue?vue&type=template&id=477d1eb9\"\nimport script from \"./AppInput.vue?vue&type=script&lang=ts\"\nexport * from \"./AppInput.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"flex flex-col\">\n    <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n      <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n        <div\n          class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\"\n        >\n          <table class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n              <tr>\n                <th\n                  class=\"\n                    px-6\n                    py-3\n                    text-left text-xs\n                    font-medium\n                    text-gray-500\n                    uppercase\n                    tracking-wider\n                  \"\n                  scope=\"col\"\n                >\n                  Name\n                </th>\n                <th\n                  class=\"\n                    px-6\n                    py-3\n                    text-left text-xs\n                    font-medium\n                    text-gray-500\n                    uppercase\n                    tracking-wider\n                  \"\n                  scope=\"col\"\n                >\n                  Type\n                </th>\n                <th\n                  class=\"\n                    px-6\n                    py-3\n                    text-left text-xs\n                    font-medium\n                    text-gray-500\n                    uppercase\n                    tracking-wider\n                  \"\n                  scope=\"col\"\n                >\n                  Description\n                </th>\n                <th\n                  class=\"\n                    px-6\n                    py-3\n                    text-left text-xs\n                    font-medium\n                    text-gray-500\n                    uppercase\n                    tracking-wider\n                  \"\n                  scope=\"col\"\n                >\n                  Rule type\n                </th>\n                <th class=\"relative px-6 py-3\" scope=\"col\" v-if=\"showActions\">\n                  <span class=\"sr-only\">Edit</span>\n                  <span class=\"sr-only\">Delete</span>\n                </th>\n              </tr>\n            </thead>\n            <tbody class=\"bg-white divide-y divide-gray-200\">\n              <tr\n                v-for=\"field in fields\"\n                :key=\"field.name\"\n                class=\"contract-field\"\n              >\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {{ field.name }}\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {{ field.type }}\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {{ field.description }}\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap\">\n                  <span\n                    :class=\"\n                      field.rule === 'Optional' ? 'bg-blue-100' : 'bg-red-100'\n                    \"\n                    class=\"\n                      px-2\n                      inline-flex\n                      text-xs\n                      leading-5\n                      font-semibold\n                      rounded-full\n                    \"\n                  >\n                    {{ field.rule }}\n                  </span>\n                </td>\n                <td\n                  v-if=\"showActions\"\n                  class=\"\n                    px-6\n                    py-4\n                    whitespace-nowrap\n                    text-right text-sm\n                    font-medium\n                  \"\n                >\n                  <a\n                    class=\"text-indigo-600 hover:text-indigo-900 mr-2\"\n                    href=\"#\"\n                    @click.prevent=\"editField(field)\"\n                    >Edit</a\n                  >\n                  <a\n                    class=\"text-indigo-600 hover:text-indigo-900\"\n                    href=\"#\"\n                    @click.prevent=\"deleteField(field)\"\n                    >Delete</a\n                  >\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport { PropType } from \"vue\";\nimport Field from \"@/entities/Contracts/Field\";\n\n@Options({\n  emits: [\"onEditField\", \"onDeleteField\"],\n  props: {\n    fields: {\n      type: Array as PropType<Field[]>,\n    },\n    showActions: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n  },\n})\nexport default class TurretForm extends Vue {\n  editField(field: Field): void {\n    this.$emit(\"onEditField\", field);\n  }\n\n  deleteField(field: Field): void {\n    this.$emit(\"onDeleteField\", field);\n  }\n}\n</script>\n","\nimport { Options, Vue } from \"vue-class-component\";\nimport { PropType } from \"vue\";\nimport Field from \"@/entities/Contracts/Field\";\n\n@Options({\n  emits: [\"onEditField\", \"onDeleteField\"],\n  props: {\n    fields: {\n      type: Array as PropType<Field[]>,\n    },\n    showActions: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n  },\n})\nexport default class TurretForm extends Vue {\n  editField(field: Field): void {\n    this.$emit(\"onEditField\", field);\n  }\n\n  deleteField(field: Field): void {\n    this.$emit(\"onDeleteField\", field);\n  }\n}\n","import { render } from \"./TurretFieldsTable.vue?vue&type=template&id=7186211a\"\nimport script from \"./TurretFieldsTable.vue?vue&type=script&lang=ts\"\nexport * from \"./TurretFieldsTable.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { Options, Vue } from \"vue-class-component\";\nimport Turret from \"@/entities/Turret\";\nimport Card from \"@/components/common/Card.vue\";\nimport Field, { RuleTypes } from \"@/entities/Contracts/Field\";\nimport AppInput from \"@/components/common/form/AppInput.vue\";\nimport AppButton from \"@/components/common/AppButton.vue\";\nimport TurretFieldsTable from \"@/components/turret/contracts/TurretFieldsTable.vue\";\n\n@Options({\n  components: { TurretFieldsTable, AppButton, AppInput, Card },\n  emits: [\"fieldsUpdated\"],\n  props: {\n    turret: {\n      type: Turret,\n    },\n  },\n})\nexport default class TurretForm extends Vue {\n  private fields: Field[] = [];\n  private editableField: Field = Field.createNull();\n  private rules = RuleTypes;\n  private editing = false;\n\n  saveField(): void {\n    const { name, type, description, rule } = this.editableField;\n    const currentField = this.fields.find((f) => f === this.editableField);\n    if (currentField) {\n      currentField.name = name;\n      currentField.type = type;\n      currentField.description = description;\n      currentField.rule = rule;\n    } else {\n      this.fields = [...this.fields, new Field(name, type, description, rule)];\n    }\n\n    this.editableField = Field.createNull();\n    this.editing = false;\n    this.$emit(\"fieldsUpdated\", this.fields);\n  }\n\n  editField(field: Field): void {\n    this.editableField = field;\n    this.editing = true;\n  }\n\n  deleteField(field: Field): void {\n    for (let i = 0; i < this.fields.length; i++) {\n      if (this.fields[i] === field) {\n        this.fields.splice(i, 1);\n      }\n    }\n  }\n}\n","import { render } from \"./TurretFields.vue?vue&type=template&id=26d78d6d\"\nimport script from \"./TurretFields.vue?vue&type=script&lang=ts\"\nexport * from \"./TurretFields.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import Field from \"@/entities/Contracts/Field\";\n\nexport default class Contract {\n  public constructor(\n    public txFunction: string,\n    public txFunctionFields: Field[],\n    public txFunctionFee: string\n  ) {}\n\n  public static createNull(): Contract {\n    return new Contract(\"\", [], \"\");\n  }\n}\n","import Turret from \"@/entities/Turret\";\nimport Contract from \"@/entities/Contracts/Contract\";\nimport {\n  Asset,\n  BASE_FEE,\n  Keypair,\n  Operation,\n  Server,\n  TransactionBuilder,\n} from \"stellar-sdk\";\nimport { getStellarPassphrase } from \"@/helpers/stellarHelper\";\n\nexport async function getUploadTxXdr(\n  turret: Turret,\n  secretKey: string,\n  contract: Contract\n): Promise<string> {\n  const server = new Server(turret.horizon);\n\n  const keyPair = Keypair.fromSecret(secretKey);\n  const publicKey = keyPair.publicKey();\n\n  const txBuilder = new TransactionBuilder(\n    await server.loadAccount(publicKey),\n    {\n      fee: BASE_FEE,\n      networkPassphrase: getStellarPassphrase(turret.network),\n    }\n  ).addOperation(\n    Operation.payment({\n      amount: turret.calculateUploadFee(contract),\n      asset: Asset.native(),\n      destination: turret.turret,\n    })\n  );\n\n  const tx = txBuilder.setTimeout(60 * 60).build();\n  tx.sign(keyPair);\n\n  return tx.toEnvelope().toXDR(\"base64\");\n}\n\nexport async function uploadContract(\n  turret: Turret,\n  contract: Contract\n): Promise<unknown> {\n  const formData = new FormData();\n\n  formData.append(\"txFunction\", contract.txFunction);\n  formData.append(\n    \"txFunctionFields\",\n    btoa(JSON.stringify(contract.txFunctionFields))\n  );\n  formData.append(\"txFunctionFee\", contract.txFunctionFee);\n\n  const response = await fetch(turret.url + \"/tx-functions\", {\n    method: \"POST\",\n    body: formData,\n  });\n\n  return response.json();\n}\n","\nimport { Options, Vue } from \"vue-class-component\";\nimport TurretForm from \"@/components/turret/TurretForm.vue\";\nimport Turret from \"@/entities/Turret\"; // @ is an alias to /src\nimport Card from \"@/components/common/Card.vue\";\nimport TurretFields from \"@/components/turret/contracts/TurretFields.vue\";\nimport TurretContract from \"@/components/turret/contracts/TurretContract.vue\";\nimport Contract from \"@/entities/Contracts/Contract\";\nimport { getUploadTxXdr, uploadContract } from \"@/services/turret/contract\";\nimport Field from \"@/entities/Contracts/Field\";\nimport AppButton from \"@/components/common/AppButton.vue\";\nimport { Transaction } from \"stellar-sdk\";\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst JSONTreeView = require(\"json-tree-view\");\n\n@Options({\n  components: {\n    AppButton,\n    TurretContract,\n    TurretFields,\n    TurretForm,\n    Card,\n  },\n  watch: {\n    contract: {\n      deep: true,\n      handler() {\n        if (this.turret.turret !== \"\") {\n          this.uploadFee = this.turret.calculateUploadFee(this.contract);\n\n          this.fieldsFee = this.turret\n            .calculateFieldsFee(this.contract)\n            .toFixed(7);\n\n          this.contractLengthFee = this.turret\n            .calculateContractLengthFee(this.contract)\n            .toFixed(7);\n        } else {\n          return \"0\";\n        }\n      },\n    },\n  },\n})\nexport default class UploadContract extends Vue {\n  private turret: Turret = new Proxy<Turret>(Turret.createNull(), {});\n  private contract: Contract = Contract.createNull();\n  private uploadFee = \"0\";\n  private contractLengthFee = \"0\";\n  private fieldsFee = \"0\";\n  private txFunctionFeeXdr = \"\";\n  private isLoading = false;\n  private isUploading = false;\n  private uploadResponse = null as unknown;\n\n  created(): void {\n    this.turret = this.$store.state.turret;\n  }\n\n  handleContractCodeLoaded(contractCode: string): void {\n    this.contract.txFunction = contractCode;\n  }\n\n  handleFieldsUpdated(fields: Field[]): void {\n    this.contract.txFunctionFields = fields;\n  }\n\n  async handleUploadTx(): Promise<void> {\n    this.isLoading = true;\n    this.contract.txFunctionFee = this.txFunctionFeeXdr = await getUploadTxXdr(\n      this.turret,\n      this.$store.state.privateKey,\n      this.contract\n    );\n\n    const tx = new Transaction(\n      this.contract.txFunctionFee,\n      this.turret.network\n    );\n    const treeView = new JSONTreeView(\n      \"txFunctionFee\",\n      JSON.parse(JSON.stringify(tx))\n    );\n    const ref = this.$refs[\"tx-function-json-viewer\"] as HTMLElement;\n    ref.innerHTML = \"\";\n    ref.appendChild(treeView.dom);\n\n    this.isLoading = false;\n  }\n\n  async upload(): Promise<void> {\n    this.isUploading = true;\n    this.uploadResponse = await uploadContract(this.turret, this.contract);\n    this.isUploading = false;\n  }\n}\n","import { render } from \"./UploadContract.vue?vue&type=template&id=b2b56d2a\"\nimport script from \"./UploadContract.vue?vue&type=script&lang=ts\"\nexport * from \"./UploadContract.vue?vue&type=script&lang=ts\"\n\nimport \"json-tree-view/devtools.css?vue&type=style&index=0&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"fee-payments\">\n    <h1 class=\"text-2xl mb-5\">\n      Create XDR token for\n      <span class=\"text-sm\">{{ $store.getters.keypair.publicKey() }}</span>\n    </h1>\n\n    <div>\n      <div>\n        <XdrTokenForm\n          :isLoading=\"isLoading\"\n          @createXdrToken=\"handleXdrTokenCreated\"\n        />\n\n        <div v-if=\"xdrToken.hash\" class=\"my-8\">\n          <strong>Xdr token</strong>\n          <br />\n          <textarea v-model=\"xdrTokenRaw\" cols=\"77\" rows=\"3\"></textarea>\n        </div>\n\n        <FeeBalanceInfo\n          v-if=\"xdrToken.hash !== ''\"\n          :transaction-fee=\"xdrToken\"\n        />\n\n        <JsonTreeView v-if=\"createXdrTokenError\" :json=\"createXdrTokenError\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport AppButton from \"@/components/common/AppButton.vue\";\n\nimport IXdrToken from \"@/entities/IXdrToken\";\nimport XdrToken from \"@/entities/XdrToken\";\nimport FeeBalanceInfo from \"@/components/turret/fee-balance/FeeBalanceInfo.vue\";\nimport XdrTokenForm from \"@/components/turret/xdr-token/XdrTokenForm.vue\";\nimport AppInput from \"@/components/common/form/AppInput.vue\";\nimport JsonTreeView from \"@/components/common/JsonTreeView.vue\";\nimport scrollToBottom from \"@/helpers/domHelper\";\nimport { getFeeBalance } from \"@/services/turret/turret\";\n\n@Options({\n  components: {\n    FeeBalanceInfo,\n    JsonTreeView,\n    AppInput,\n    XdrTokenForm,\n    AppButton,\n  },\n})\nexport default class CreateXdrToken extends Vue {\n  private xdrToken: IXdrToken = XdrToken.createNull();\n  private xdrTokenRaw = \"\";\n  private createXdrTokenError = null;\n  private isLoading = false;\n\n  async handleXdrTokenCreated(rawXdrToken: string): Promise<void> {\n    this.isLoading = true;\n    this.xdrToken = XdrToken.createNull();\n    this.xdrTokenRaw = rawXdrToken;\n    this.createXdrTokenError = null;\n    const turret = this.$store.state.turret;\n\n    try {\n      const txFeeData = await getFeeBalance(turret, rawXdrToken);\n      this.xdrToken = txFeeData as IXdrToken;\n    } catch (e) {\n      this.createXdrTokenError = e;\n    }\n\n    this.isLoading = false;\n\n    await this.$nextTick(scrollToBottom);\n  }\n}\n</script>\n\n<style src=\"json-tree-view/devtools.css\"></style>\n","import IXdrToken from \"@/entities/IXdrToken\";\n\nexport default class XdrToken implements IXdrToken {\n  private constructor(\n    public hash: string,\n    public lastModifiedTime: number,\n    public publicKey: string,\n    public singleUse: boolean,\n    public txFunctionHashes: string[]\n  ) {}\n\n  public static createNull(): IXdrToken {\n    return new XdrToken(\"\", 0, \"\", false, []);\n  }\n}\n","<template>\n  <div class=\"transaction-fee mt-4 flex flex-col\">\n    <div class=\"overflow-x-auto -mx-8\">\n      <div class=\"py-2 align-middle\">\n        <div class=\"shadow overflow-hidden border-b border-gray-200 rounded-lg\">\n          <table class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n              <tr>\n                <th\n                  class=\"\n                    px-6\n                    py-3\n                    text-left text-xs\n                    font-medium\n                    text-gray-500\n                    uppercase\n                    tracking-wider\n                  \"\n                  scope=\"col\"\n                >\n                  Field\n                </th>\n                <th\n                  class=\"\n                    px-6\n                    py-3\n                    text-left text-xs\n                    font-medium\n                    text-gray-500\n                    uppercase\n                    tracking-wider\n                  \"\n                  scope=\"col\"\n                >\n                  Value\n                </th>\n                <th class=\"relative px-6 py-3\" scope=\"col\">\n                  <span class=\"sr-only\">Edit</span>\n                  <span class=\"sr-only\">Delete</span>\n                </th>\n              </tr>\n            </thead>\n            <tbody class=\"bg-white divide-y divide-gray-200\">\n              <tr>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  Public Key\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {{ transactionFee.publicKey }}\n                </td>\n              </tr>\n              <tr>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  Balance\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {{ transactionFee.balance }}\n                </td>\n              </tr>\n              <tr>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  Hash\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {{ transactionFee.hash }}\n                </td>\n              </tr>\n              <tr>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  Last modified time\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {{ new Date(Number(transactionFee.lastModifiedTime)) }}\n                </td>\n              </tr>\n              <tr>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  Single use?\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap\">\n                  <span\n                    :class=\"\n                      transactionFee.singleUse ? 'bg-red-100' : 'bg-blue-100'\n                    \"\n                    class=\"\n                      px-2\n                      inline-flex\n                      text-xs\n                      leading-5\n                      font-semibold\n                      rounded-full\n                    \"\n                  >\n                    {{ transactionFee.singleUse ? \"Yes\" : \"No\" }}\n                  </span>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  Function hashes\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  <ul>\n                    <li\n                      v-for=\"fnHash in transactionFee.txFunctionHashes\"\n                      :key=\"fnHash\"\n                    >\n                      <a class=\"underline text-blue-500 font-mono\" href=\"#\">{{\n                        fnHash\n                      }}</a>\n                    </li>\n                  </ul>\n                </td>\n              </tr>\n              <tr v-if=\"showActions\">\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  Actions\n                </td>\n                <td\n                  class=\"\n                    text-blue-500\n                    px-6\n                    py-4\n                    whitespace-nowrap\n                    text-sm\n                    font-medium\n                  \"\n                >\n                  <a\n                    class=\"hover:text-blue-900 mr-2\"\n                    href=\"#\"\n                    @click.prevent=\"$emit('fund', $store.state.turret.fee.min)\"\n                  >\n                    {{\n                      isLoading\n                        ? \"Loading...\"\n                        : `Fund Min (${$store.state.turret.fee.min} XLM)`\n                    }}\n                  </a>\n                  <a\n                    class=\"hover:text-blue-900 mr-2\"\n                    href=\"#\"\n                    @click.prevent=\"$emit('fund', $store.state.turret.fee.max)\"\n                  >\n                    {{\n                      isLoading\n                        ? \"Loading...\"\n                        : `Fund Max (${$store.state.turret.fee.max} XLM)`\n                    }}\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport { PropType } from \"vue\";\nimport IXdrToken from \"@/entities/IXdrToken\";\n\n@Options({\n  props: {\n    transactionFee: {\n      type: Object as PropType<IXdrToken>,\n      required: true,\n    },\n    showActions: {\n      type: Boolean,\n      default: false,\n    },\n    isLoading: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: [\"fund\"],\n})\nexport default class FeeBalanceInfo extends Vue {}\n</script>\n","\nimport { Options, Vue } from \"vue-class-component\";\nimport { PropType } from \"vue\";\nimport IXdrToken from \"@/entities/IXdrToken\";\n\n@Options({\n  props: {\n    transactionFee: {\n      type: Object as PropType<IXdrToken>,\n      required: true,\n    },\n    showActions: {\n      type: Boolean,\n      default: false,\n    },\n    isLoading: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: [\"fund\"],\n})\nexport default class FeeBalanceInfo extends Vue {}\n","import { render } from \"./FeeBalanceInfo.vue?vue&type=template&id=7e0ac5a6\"\nimport script from \"./FeeBalanceInfo.vue?vue&type=script&lang=ts\"\nexport * from \"./FeeBalanceInfo.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"transaction-fee mb-4\">\n    <form class=\"w-full mb-10\" @submit.prevent=\"saveFunctionHash\">\n      <div>\n        <AppInput v-model=\"newFunctionHash\" label=\"Function hash (optional)\" />\n        <p class=\"mb-2\">\n          e.g.: 30180f8f65a06b24480b51c29317f3eeb152141d00254d20bce6d6c9a3f35602\n        </p>\n        <p class=\"mb-4\">{{ newFunctionHashError }}</p>\n      </div>\n      <div class=\"text-center\">\n        <AppButton class=\"block w-full\" @click=\"saveFunctionHash\">\n          Add\n        </AppButton>\n      </div>\n    </form>\n\n    <table\n      v-if=\"functionHashes.length\"\n      class=\"min-w-full divide-y divide-gray-200 mb-5\"\n    >\n      <thead class=\"bg-gray-50\">\n        <tr>\n          <th\n            class=\"\n              px-6\n              py-3\n              text-left text-xs\n              font-medium\n              text-gray-500\n              uppercase\n              tracking-wider\n            \"\n            scope=\"col\"\n          >\n            Function hash\n          </th>\n          <th class=\"relative px-6 py-3\" scope=\"col\">\n            <span class=\"sr-only\">Delete</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody class=\"bg-white divide-y divide-gray-200\">\n        <tr v-for=\"hash in functionHashes\" :key=\"hash\">\n          <td\n            class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 font-mono\"\n          >\n            <a class=\"underline text-blue-500\" href=\"#\">{{ hash }}</a>\n          </td>\n          <td\n            class=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\"\n          >\n            <a\n              class=\"text-indigo-600 hover:text-indigo-900\"\n              href=\"#\"\n              @click.prevent=\"deleteFunctionHash(hash)\"\n            >\n              Delete\n            </a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <p v-else class=\"mb-8\">\n      This XDR token is valid for any function. Add one or more Function Hashes\n      to restrict it.\n    </p>\n\n    <div>\n      <AppInput v-model=\"ttl\" label=\"TTL (in seconds)\" />\n      <p class=\"mb-4\">{{ ttlError }}</p>\n    </div>\n\n    <div class=\"flex mb-6\">\n      <div class=\"w-1/3 block text-gray-500 font-bold mb-1 md:mb-0 pr-4\">\n        Single use?\n      </div>\n      <label class=\"mr-4\">\n        <input\n          v-model=\"isSingleUse\"\n          class=\"mr-2 leading-tight\"\n          name=\"rule-type\"\n          type=\"radio\"\n          value=\"true\"\n        />\n        <span class=\"text-sm\">True</span>\n      </label>\n      <label>\n        <input\n          v-model=\"isSingleUse\"\n          class=\"mr-2 leading-tight\"\n          name=\"rule-type\"\n          type=\"radio\"\n          value=\"false\"\n        />\n        <span class=\"text-sm\">False</span>\n      </label>\n    </div>\n    <AppButton @click=\"createXdrToken\"\n      >{{ isLoading || isCreatingXdr ? \"Loading...\" : \"Create xdrToken\" }}\n    </AppButton>\n\n    <JsonTreeView v-if=\"requestError\" :json=\"requestError\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport AppButton from \"@/components/common/AppButton.vue\";\nimport AppInput from \"@/components/common/form/AppInput.vue\";\nimport JsonTreeView from \"@/components/common/JsonTreeView.vue\";\nimport { generateXdr } from \"@/services/turret/turret\";\n\n@Options({\n  components: { JsonTreeView, AppInput, AppButton },\n  emits: [\"createXdrToken\"],\n  props: {\n    isLoading: {\n      type: Boolean,\n      default: false,\n    },\n  },\n})\nexport default class XdrTokenForm extends Vue {\n  private newFunctionHash = \"\";\n  private newFunctionHashError = \"\";\n  private functionHashes: string[] = [];\n  private xdrToken = \"\";\n  private ttl = \"86400\";\n  private ttlError = \"\";\n  private isSingleUse = \"false\";\n  private requestError = null as unknown;\n  private isCreatingXdr = false;\n\n  saveFunctionHash(): void {\n    const ttl = Number(this.ttl);\n    if (isNaN(ttl)) {\n      this.ttlError = \"TTL must be a number, in seconds.\";\n      return;\n    }\n    if (this.newFunctionHash.length !== 64) {\n      this.newFunctionHashError =\n        \"Function hashes should be 64 characters long\";\n      return;\n    }\n    this.functionHashes.push(this.newFunctionHash);\n    this.newFunctionHash = \"\";\n    this.newFunctionHashError = \"\";\n  }\n\n  deleteFunctionHash(hash: string): void {\n    this.functionHashes.splice(\n      this.functionHashes.findIndex((h) => h === hash),\n      1\n    );\n  }\n\n  async createXdrToken(): Promise<void> {\n    this.isCreatingXdr = true;\n    this.xdrToken = \"\";\n    this.requestError = null;\n\n    try {\n      const token = await generateXdr(\n        this.$store.state.turret,\n        this.$store.getters.keypair,\n        this.isSingleUse,\n        Number(this.ttl),\n        this.functionHashes\n      );\n\n      this.xdrToken = token;\n\n      this.$emit(\"createXdrToken\", token);\n    } catch (e) {\n      this.requestError = e;\n    } finally {\n      this.isCreatingXdr = false;\n    }\n  }\n}\n</script>\n","<template>\n  <pre ref=\"placeholder\"></pre>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst JSONTreeView = require(\"json-tree-view\");\n\n@Options({\n  props: {\n    json: {\n      type: Object,\n      required: true,\n    },\n  },\n  watch: {\n    json: {\n      handler(): void {\n        this.renderJson();\n      },\n    },\n  },\n})\nexport default class JsonTreeView extends Vue {\n  private json = {};\n\n  created(): void {\n    this.$nextTick(() => {\n      this.renderJson();\n    });\n  }\n\n  renderJson(): void {\n    const ref = this.$refs.placeholder as HTMLElement;\n    const treeView = new JSONTreeView(\n      \"result\",\n      JSON.parse(JSON.stringify(this.json))\n    );\n    treeView.readonly = true;\n\n    ref.innerHTML = \"\";\n    ref.appendChild(treeView.dom);\n  }\n}\n</script>\n","\nimport { Options, Vue } from \"vue-class-component\";\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst JSONTreeView = require(\"json-tree-view\");\n\n@Options({\n  props: {\n    json: {\n      type: Object,\n      required: true,\n    },\n  },\n  watch: {\n    json: {\n      handler(): void {\n        this.renderJson();\n      },\n    },\n  },\n})\nexport default class JsonTreeView extends Vue {\n  private json = {};\n\n  created(): void {\n    this.$nextTick(() => {\n      this.renderJson();\n    });\n  }\n\n  renderJson(): void {\n    const ref = this.$refs.placeholder as HTMLElement;\n    const treeView = new JSONTreeView(\n      \"result\",\n      JSON.parse(JSON.stringify(this.json))\n    );\n    treeView.readonly = true;\n\n    ref.innerHTML = \"\";\n    ref.appendChild(treeView.dom);\n  }\n}\n","import { render } from \"./JsonTreeView.vue?vue&type=template&id=f603fade\"\nimport script from \"./JsonTreeView.vue?vue&type=script&lang=ts\"\nexport * from \"./JsonTreeView.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { Options, Vue } from \"vue-class-component\";\nimport AppButton from \"@/components/common/AppButton.vue\";\nimport AppInput from \"@/components/common/form/AppInput.vue\";\nimport JsonTreeView from \"@/components/common/JsonTreeView.vue\";\nimport { generateXdr } from \"@/services/turret/turret\";\n\n@Options({\n  components: { JsonTreeView, AppInput, AppButton },\n  emits: [\"createXdrToken\"],\n  props: {\n    isLoading: {\n      type: Boolean,\n      default: false,\n    },\n  },\n})\nexport default class XdrTokenForm extends Vue {\n  private newFunctionHash = \"\";\n  private newFunctionHashError = \"\";\n  private functionHashes: string[] = [];\n  private xdrToken = \"\";\n  private ttl = \"86400\";\n  private ttlError = \"\";\n  private isSingleUse = \"false\";\n  private requestError = null as unknown;\n  private isCreatingXdr = false;\n\n  saveFunctionHash(): void {\n    const ttl = Number(this.ttl);\n    if (isNaN(ttl)) {\n      this.ttlError = \"TTL must be a number, in seconds.\";\n      return;\n    }\n    if (this.newFunctionHash.length !== 64) {\n      this.newFunctionHashError =\n        \"Function hashes should be 64 characters long\";\n      return;\n    }\n    this.functionHashes.push(this.newFunctionHash);\n    this.newFunctionHash = \"\";\n    this.newFunctionHashError = \"\";\n  }\n\n  deleteFunctionHash(hash: string): void {\n    this.functionHashes.splice(\n      this.functionHashes.findIndex((h) => h === hash),\n      1\n    );\n  }\n\n  async createXdrToken(): Promise<void> {\n    this.isCreatingXdr = true;\n    this.xdrToken = \"\";\n    this.requestError = null;\n\n    try {\n      const token = await generateXdr(\n        this.$store.state.turret,\n        this.$store.getters.keypair,\n        this.isSingleUse,\n        Number(this.ttl),\n        this.functionHashes\n      );\n\n      this.xdrToken = token;\n\n      this.$emit(\"createXdrToken\", token);\n    } catch (e) {\n      this.requestError = e;\n    } finally {\n      this.isCreatingXdr = false;\n    }\n  }\n}\n","import { render } from \"./XdrTokenForm.vue?vue&type=template&id=5b4b4259\"\nimport script from \"./XdrTokenForm.vue?vue&type=script&lang=ts\"\nexport * from \"./XdrTokenForm.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","export default function scrollToBottom(): void {\n  window.scrollTo(0, document.body.scrollHeight);\n}\n","\nimport { Options, Vue } from \"vue-class-component\";\nimport AppButton from \"@/components/common/AppButton.vue\";\n\nimport IXdrToken from \"@/entities/IXdrToken\";\nimport XdrToken from \"@/entities/XdrToken\";\nimport FeeBalanceInfo from \"@/components/turret/fee-balance/FeeBalanceInfo.vue\";\nimport XdrTokenForm from \"@/components/turret/xdr-token/XdrTokenForm.vue\";\nimport AppInput from \"@/components/common/form/AppInput.vue\";\nimport JsonTreeView from \"@/components/common/JsonTreeView.vue\";\nimport scrollToBottom from \"@/helpers/domHelper\";\nimport { getFeeBalance } from \"@/services/turret/turret\";\n\n@Options({\n  components: {\n    FeeBalanceInfo,\n    JsonTreeView,\n    AppInput,\n    XdrTokenForm,\n    AppButton,\n  },\n})\nexport default class CreateXdrToken extends Vue {\n  private xdrToken: IXdrToken = XdrToken.createNull();\n  private xdrTokenRaw = \"\";\n  private createXdrTokenError = null;\n  private isLoading = false;\n\n  async handleXdrTokenCreated(rawXdrToken: string): Promise<void> {\n    this.isLoading = true;\n    this.xdrToken = XdrToken.createNull();\n    this.xdrTokenRaw = rawXdrToken;\n    this.createXdrTokenError = null;\n    const turret = this.$store.state.turret;\n\n    try {\n      const txFeeData = await getFeeBalance(turret, rawXdrToken);\n      this.xdrToken = txFeeData as IXdrToken;\n    } catch (e) {\n      this.createXdrTokenError = e;\n    }\n\n    this.isLoading = false;\n\n    await this.$nextTick(scrollToBottom);\n  }\n}\n","import { render } from \"./CreateXdrToken.vue?vue&type=template&id=77a599df\"\nimport script from \"./CreateXdrToken.vue?vue&type=script&lang=ts\"\nexport * from \"./CreateXdrToken.vue?vue&type=script&lang=ts\"\n\nimport \"json-tree-view/devtools.css?vue&type=style&index=0&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"fee-payments\">\n    <h1 class=\"text-2xl mb-5\">Manage Turret funds</h1>\n\n    <div class=\"grid grid-cols-2 gap-10\">\n      <div>\n        <h2 class=\"text-2xl mb-5\">View Fee Balance</h2>\n        <AppInput v-model=\"xdrToken\" label=\"XDR Token\" />\n        <p class=\"mb-5 text-sm\">\n          <router-link class=\"underline text-blue-500\" to=\"/xdr-token\">\n            Create an XDR token\n          </router-link>\n          or\n          <a\n            class=\"underline text-blue-500\"\n            href=\"#\"\n            @click.prevent=\"createXdr\"\n          >\n            {{\n              isCreatingXdr\n                ? \"creating...\"\n                : `get a global XDR token for ${$store.getters.keypair.publicKey()} (expires in an hour)`\n            }}\n          </a>\n        </p>\n        <AppButton @click=\"() => fetchTransactionFee()\">\n          {{ isFetching ? \"Loading...\" : \"Fetch\" }}\n        </AppButton>\n\n        <p v-if=\"fetchError\">{{ fetchError }}</p>\n      </div>\n      <div>\n        <form @submit.prevent=\"() => {}\">\n          <AppInput v-model=\"publicKeyToFund\" label=\"Public key to fund\" />\n          <a\n            class=\"blue-500 underline\"\n            href=\"#\"\n            @click.prevent=\"\n              publicKeyToFund = $store.getters.keypair.publicKey()\n            \"\n          >\n            Use {{ $store.getters.keypair.publicKey() }}\n          </a>\n\n          <div class=\"mt-5\">\n            <AppButton\n              class=\"mr-4\"\n              @click.prevent=\"\n                () => handleFundingPublicKey($store.state.turret.fee.min)\n              \"\n            >\n              {{\n                isProcessingPayment\n                  ? \"Loading...\"\n                  : `Fund Min (${$store.state.turret.fee.min} XLM)`\n              }}\n            </AppButton>\n            <AppButton\n              @click.prevent=\"\n                () => handleFundingPublicKey($store.state.turret.fee.max)\n              \"\n            >\n              {{\n                isProcessingPayment\n                  ? \"Loading...\"\n                  : `Fund max (${$store.state.turret.fee.max} XLM)`\n              }}\n            </AppButton>\n          </div>\n        </form>\n      </div>\n    </div>\n    <PaymentInfo :payment=\"payment\" v-if=\"payment.paymentHash !== ''\" />\n    {{ paymentError }}\n    <FeeBalanceInfo\n      v-if=\"feeBalance.hash\"\n      :is-loading=\"isProcessingPayment\"\n      :show-actions=\"true\"\n      :transaction-fee=\"feeBalance\"\n      @fund=\"(amount) => handleFundingFromFeeBalanceInfo(this.xdrToken, amount)\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport AppButton from \"@/components/common/AppButton.vue\";\n\nimport FeeBalanceInfo from \"@/components/turret/fee-balance/FeeBalanceInfo.vue\";\nimport XdrTokenForm from \"@/components/turret/xdr-token/XdrTokenForm.vue\";\nimport AppInput from \"@/components/common/form/AppInput.vue\";\nimport PaymentInfo from \"@/components/turret/payment/PaymentInfo.vue\";\nimport scrollToBottom from \"@/helpers/domHelper\";\nimport IFeeBalance from \"@/entities/IFeeBalance\";\nimport FeeBalance from \"@/entities/FeeBalance\";\nimport Payment from \"@/entities/Payment\";\nimport IPayment from \"@/entities/IPayment\";\nimport TurretHttpError from \"@/errors/TurretHttpError\";\nimport {\n  fundTurret,\n  generateXdr,\n  getFeeBalance,\n} from \"@/services/turret/turret\";\n\n@Options({\n  components: {\n    FeeBalanceInfo,\n    AppInput,\n    XdrTokenForm,\n    AppButton,\n    PaymentInfo,\n  },\n})\nexport default class ManageTurretFunds extends Vue {\n  private feeBalance: IFeeBalance = FeeBalance.createNull();\n  private xdrToken = \"\";\n  private payment: IPayment = Payment.createNull();\n  private fetchError = \"\";\n  private paymentError = \"\";\n  private isFetching = false;\n  private isCreatingXdr = false;\n  private isProcessingPayment = false;\n  private publicKeyToFund = \"\";\n\n  async createXdr(): Promise<void> {\n    try {\n      const turret = this.$store.state.turret;\n      const keyPair = this.$store.getters.keypair;\n      this.isCreatingXdr = true;\n      this.xdrToken = await generateXdr(turret, keyPair, \"true\", 3590, []);\n      await this.fetchTransactionFee();\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.isCreatingXdr = false;\n    }\n  }\n\n  async fetchTransactionFee(xdrToken?: string): Promise<void> {\n    this.isFetching = true;\n    this.fetchError = \"\";\n    this.feeBalance = FeeBalance.createNull();\n\n    const turret = this.$store.state.turret;\n    try {\n      this.feeBalance = await getFeeBalance(turret, xdrToken ?? this.xdrToken);\n    } catch (e) {\n      this.fetchError = e instanceof TurretHttpError ? e.json : e;\n    }\n\n    this.isFetching = false;\n    await this.$nextTick(scrollToBottom);\n  }\n\n  async handleFundingFromFeeBalanceInfo(\n    xdrToken: string,\n    amount: string\n  ): Promise<void> {\n    this.isProcessingPayment = true;\n    this.paymentError = \"\";\n    const kp = this.$store.getters.keypair;\n    const turret = this.$store.state.turret;\n    try {\n      this.payment = await fundTurret(turret, kp.publicKey(), kp, amount);\n    } catch (e) {\n      this.paymentError = e instanceof TurretHttpError ? e.json : e;\n    }\n\n    await this.fetchTransactionFee(xdrToken);\n    this.isProcessingPayment = false;\n    await this.$nextTick(scrollToBottom);\n  }\n\n  async handleFundingPublicKey(amount: string): Promise<void> {\n    this.isProcessingPayment = true;\n    this.paymentError = \"\";\n    try {\n      this.payment = await fundTurret(\n        this.$store.state.turret,\n        this.publicKeyToFund,\n        this.$store.getters.keypair,\n        amount\n      );\n    } catch (e) {\n      this.paymentError = e instanceof TurretHttpError ? e.json : e;\n    }\n\n    this.isProcessingPayment = false;\n    await this.$nextTick(scrollToBottom);\n  }\n}\n</script>\n","<template>\n  <div class=\"transaction-fee mt-4 flex flex-col\">\n    <div class=\"overflow-x-auto -mx-8\">\n      <div class=\"py-2 align-middle\">\n        <div class=\"shadow overflow-hidden border-b border-gray-200 rounded-lg\">\n          <table class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n              <tr>\n                <th\n                  class=\"\n                    px-6\n                    py-3\n                    text-left text-xs\n                    font-medium\n                    text-gray-500\n                    uppercase\n                    tracking-wider\n                  \"\n                  scope=\"col\"\n                >\n                  Field\n                </th>\n                <th\n                  class=\"\n                    px-6\n                    py-3\n                    text-left text-xs\n                    font-medium\n                    text-gray-500\n                    uppercase\n                    tracking-wider\n                  \"\n                  scope=\"col\"\n                >\n                  Value\n                </th>\n              </tr>\n            </thead>\n            <tbody class=\"bg-white divide-y divide-gray-200\">\n              <tr>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  Public Key\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {{ payment.publicKey }}\n                </td>\n              </tr>\n              <tr>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  Payment Hash\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {{ payment.paymentHash }}\n                </td>\n              </tr>\n              <tr>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  Last modified time\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {{ new Date(Number(payment.lastModifiedTime)) }}\n                </td>\n              </tr>\n              <tr>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  Balance\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {{ payment.balance }}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport { PropType } from \"vue\";\nimport IPayment from \"@/entities/IPayment\";\n\n@Options({\n  props: {\n    payment: {\n      type: Object as PropType<IPayment>,\n      required: true,\n    },\n  },\n})\nexport default class PaymentInfo extends Vue {}\n</script>\n","\nimport { Options, Vue } from \"vue-class-component\";\nimport { PropType } from \"vue\";\nimport IPayment from \"@/entities/IPayment\";\n\n@Options({\n  props: {\n    payment: {\n      type: Object as PropType<IPayment>,\n      required: true,\n    },\n  },\n})\nexport default class PaymentInfo extends Vue {}\n","import { render } from \"./PaymentInfo.vue?vue&type=template&id=5ef9ea5e\"\nimport script from \"./PaymentInfo.vue?vue&type=script&lang=ts\"\nexport * from \"./PaymentInfo.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import IFeeBalance from \"@/entities/IFeeBalance\";\n\nexport default class FeeBalance implements IFeeBalance {\n  constructor(\n    public balance: number,\n    public hash: string,\n    public lastModifiedTime: number,\n    public publicKey: string,\n    public singleUse: boolean,\n    public txFunctionHashes: string[]\n  ) {}\n\n  public static createNull(): IFeeBalance {\n    return new FeeBalance(0, \"\", 0, \"\", false, []);\n  }\n}\n","export default class Payment {\n  constructor(\n    public publicKey: string,\n    public paymentHash: string,\n    public lastModifiedTime: number,\n    public balance: string\n  ) {}\n\n  public static createNull(): Payment {\n    return new Payment(\"\", \"\", 0, \"\");\n  }\n}\n","\nimport { Options, Vue } from \"vue-class-component\";\nimport AppButton from \"@/components/common/AppButton.vue\";\n\nimport FeeBalanceInfo from \"@/components/turret/fee-balance/FeeBalanceInfo.vue\";\nimport XdrTokenForm from \"@/components/turret/xdr-token/XdrTokenForm.vue\";\nimport AppInput from \"@/components/common/form/AppInput.vue\";\nimport PaymentInfo from \"@/components/turret/payment/PaymentInfo.vue\";\nimport scrollToBottom from \"@/helpers/domHelper\";\nimport IFeeBalance from \"@/entities/IFeeBalance\";\nimport FeeBalance from \"@/entities/FeeBalance\";\nimport Payment from \"@/entities/Payment\";\nimport IPayment from \"@/entities/IPayment\";\nimport TurretHttpError from \"@/errors/TurretHttpError\";\nimport {\n  fundTurret,\n  generateXdr,\n  getFeeBalance,\n} from \"@/services/turret/turret\";\n\n@Options({\n  components: {\n    FeeBalanceInfo,\n    AppInput,\n    XdrTokenForm,\n    AppButton,\n    PaymentInfo,\n  },\n})\nexport default class ManageTurretFunds extends Vue {\n  private feeBalance: IFeeBalance = FeeBalance.createNull();\n  private xdrToken = \"\";\n  private payment: IPayment = Payment.createNull();\n  private fetchError = \"\";\n  private paymentError = \"\";\n  private isFetching = false;\n  private isCreatingXdr = false;\n  private isProcessingPayment = false;\n  private publicKeyToFund = \"\";\n\n  async createXdr(): Promise<void> {\n    try {\n      const turret = this.$store.state.turret;\n      const keyPair = this.$store.getters.keypair;\n      this.isCreatingXdr = true;\n      this.xdrToken = await generateXdr(turret, keyPair, \"true\", 3590, []);\n      await this.fetchTransactionFee();\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.isCreatingXdr = false;\n    }\n  }\n\n  async fetchTransactionFee(xdrToken?: string): Promise<void> {\n    this.isFetching = true;\n    this.fetchError = \"\";\n    this.feeBalance = FeeBalance.createNull();\n\n    const turret = this.$store.state.turret;\n    try {\n      this.feeBalance = await getFeeBalance(turret, xdrToken ?? this.xdrToken);\n    } catch (e) {\n      this.fetchError = e instanceof TurretHttpError ? e.json : e;\n    }\n\n    this.isFetching = false;\n    await this.$nextTick(scrollToBottom);\n  }\n\n  async handleFundingFromFeeBalanceInfo(\n    xdrToken: string,\n    amount: string\n  ): Promise<void> {\n    this.isProcessingPayment = true;\n    this.paymentError = \"\";\n    const kp = this.$store.getters.keypair;\n    const turret = this.$store.state.turret;\n    try {\n      this.payment = await fundTurret(turret, kp.publicKey(), kp, amount);\n    } catch (e) {\n      this.paymentError = e instanceof TurretHttpError ? e.json : e;\n    }\n\n    await this.fetchTransactionFee(xdrToken);\n    this.isProcessingPayment = false;\n    await this.$nextTick(scrollToBottom);\n  }\n\n  async handleFundingPublicKey(amount: string): Promise<void> {\n    this.isProcessingPayment = true;\n    this.paymentError = \"\";\n    try {\n      this.payment = await fundTurret(\n        this.$store.state.turret,\n        this.publicKeyToFund,\n        this.$store.getters.keypair,\n        amount\n      );\n    } catch (e) {\n      this.paymentError = e instanceof TurretHttpError ? e.json : e;\n    }\n\n    this.isProcessingPayment = false;\n    await this.$nextTick(scrollToBottom);\n  }\n}\n","import { render } from \"./ManageTurretFunds.vue?vue&type=template&id=563f944d\"\nimport script from \"./ManageTurretFunds.vue?vue&type=script&lang=ts\"\nexport * from \"./ManageTurretFunds.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n    <h1 class=\"text-2xl mb-5\">View and run functions</h1>\n    <Card>\n      <AppInput v-model=\"txFunctionHash\" label=\"Function hash\" />\n      <AppButton @click=\"getTxFunction\">{{\n        isFetching ? \"Fetching...\" : \"Fetch\"\n      }}</AppButton>\n\n      <div v-if=\"txFunction.txFunction\">\n        <p class=\"mt-4 font-bold\">TxFunction fields</p>\n        <TurretFieldsTable\n          :fields=\"txFunction.fields\"\n          :showActions=\"false\"\n        ></TurretFieldsTable>\n        <p class=\"mt-10\"><strong>Signer:</strong> {{ txFunction.signer }}</p>\n      </div>\n      <p v-if=\"getTxFunctionError\">{{ getTxFunctionError }}</p>\n    </Card>\n    <Card v-if=\"txFunction.txFunction\">\n      <div v-for=\"field in txFunction.fields\" id=\"fields\" :key=\"field\">\n        <AppInput\n          v-model=\"txFunctionRunParams[field.name]\"\n          :label=\"field.name\"\n        />\n      </div>\n      <div class=\"turrets my-5\">\n        <TurretUrlList\n          :turretsUrls=\"turretsUrls\"\n          @onDeleteTurretUrl=\"(url) => deleteTurretUrl(url)\"\n          @onEditTurretUrl=\"(url) => editTurretUrl(url)\"\n        />\n        <AppInput v-model=\"editableTurretUrl\" label=\"Add another turret url\" />\n        <AppButton @click=\"saveTurretUrl\"\n          >{{ isEditingTurretUrl ? \"Save\" : \"Add another turret\" }}\n        </AppButton>\n      </div>\n      <AppInput v-model=\"xdrToken\" label=\"XDR Token\" />\n      <p class=\"mb-5 text-sm\">\n        <router-link class=\"underline text-blue-500\" to=\"/xdr-token\">\n          Create an XDR token\n        </router-link>\n        or\n        <a class=\"underline text-blue-500\" href=\"#\" @click.prevent=\"createXdr\">\n          {{\n            isCreatingXdr\n              ? \"creating...\"\n              : `get a multi-use XDR token for ${$store.getters.keypair.publicKey()} and ${\n                  this.txFunctionHash\n                } (valid for 5 minutes)`\n          }}\n        </a>\n      </p>\n      <AppButton @click=\"runTxFunction\"\n        >{{ isRunning ? \"Running...\" : \"Run txFunction\" }}\n      </AppButton>\n      <div v-if=\"resultingTxRunXdr\" id=\"resultingXdr\">\n        <p class=\"mt-4 font-bold\">Resulting XDR:</p>\n        <p class=\"break-words\">\n          {{ resultingTxRunXdr }}\n        </p>\n      </div>\n\n      <div>\n        <p class=\"mt-4 font-bold\">TxFunction code</p>\n        <pre>{{ txFunction.txFunction }}</pre>\n      </div>\n    </Card>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport AppButton from \"@/components/common/AppButton.vue\";\nimport AppInput from \"@/components/common/form/AppInput.vue\";\nimport Card from \"@/components/common/Card.vue\";\nimport { getTxFunction, runTxFunction } from \"@/services/turret/function\";\nimport TxFunction from \"@/entities/TxFunction\";\nimport JsonTreeView from \"@/components/common/JsonTreeView.vue\";\nimport TurretFieldsTable from \"@/components/turret/contracts/TurretFieldsTable.vue\";\nimport TurretUrlList from \"@/components/turret/contracts/TurretUrlList.vue\";\nimport TurretHttpError from \"@/errors/TurretHttpError\";\nimport { generateXdr } from \"@/services/turret/turret\";\n\n@Options({\n  components: {\n    TurretFieldsTable,\n    AppButton,\n    AppInput,\n    Card,\n    JsonTreeView,\n    TurretUrlList,\n  },\n})\nexport default class TxFunctions extends Vue {\n  private txFunctionHash = \"\";\n  private txFunction = TxFunction.createNull();\n  private getTxFunctionError = \"\";\n  private turretsUrls: string[] = [];\n  private txFunctionRunParams = {};\n  private xdrToken = \"\";\n  private resultingTxRunXdr = \"\";\n  private editableTurretUrl = \"\";\n  private editIndex = 0;\n  private isEditingTurretUrl = false;\n  private isCreatingXdr = false;\n  private isRunning = false;\n  private isFetching = false;\n\n  async getTxFunction(): Promise<void> {\n    this.isFetching = true;\n    this.getTxFunctionError = \"\";\n    const turret = this.$store.state.turret;\n    try {\n      this.txFunction = await getTxFunction(turret, this.txFunctionHash);\n    } catch (error) {\n      this.getTxFunctionError = error;\n    }\n    this.isFetching = false;\n  }\n\n  saveTurretUrl(): void {\n    if (!this.editableTurretUrl) {\n      return;\n    }\n\n    if (this.isEditingTurretUrl && this.editIndex !== -1) {\n      this.turretsUrls[this.editIndex] = this.editableTurretUrl;\n    } else {\n      this.turretsUrls = [...this.turretsUrls, this.editableTurretUrl];\n    }\n    this.editableTurretUrl = \"\";\n    this.isEditingTurretUrl = false;\n  }\n\n  editTurretUrl(url: string): void {\n    this.editableTurretUrl = url;\n    this.editIndex = this.turretsUrls.indexOf(url);\n    this.isEditingTurretUrl = true;\n  }\n\n  deleteTurretUrl(url: string): void {\n    for (let i = 0; i < this.turretsUrls.length; i++) {\n      if (this.turretsUrls[i] === url) {\n        this.turretsUrls.splice(i, 1);\n      }\n    }\n  }\n\n  async runTxFunction(): Promise<void> {\n    this.isRunning = true;\n    const finalTurretUrls = [...this.turretsUrls];\n    finalTurretUrls.push(this.$store.state.turret.url);\n\n    try {\n      this.resultingTxRunXdr = await runTxFunction(\n        finalTurretUrls,\n        this.txFunctionHash,\n        this.txFunctionRunParams,\n        this.xdrToken,\n        this.$store.state.turret.network\n      );\n    } catch (e) {\n      this.resultingTxRunXdr = e.message;\n      if (e instanceof TurretHttpError) {\n        this.resultingTxRunXdr = e.json;\n      }\n    }\n\n    this.isRunning = false;\n  }\n\n  async createXdr(): Promise<void> {\n    this.isCreatingXdr = true;\n    this.xdrToken = await generateXdr(\n      this.$store.state.turret,\n      this.$store.getters.keypair,\n      \"false\",\n      300,\n      [this.txFunctionHash]\n    );\n    this.isCreatingXdr = false;\n  }\n}\n</script>\n","import Turret from \"@/entities/Turret\";\nimport ITxFunction from \"@/entities/ITxFunction\";\nimport TurretHttpError from \"@/errors/TurretHttpError\";\nimport { getStellarPassphrase } from \"@/helpers/stellarHelper\";\nimport { Transaction } from \"stellar-sdk\";\n\nexport async function getTxFunction(\n  turret: Turret,\n  txFunctionHash: string\n): Promise<ITxFunction> {\n  const response = await fetch(`${turret.url}/tx-functions/${txFunctionHash}`);\n\n  if (!response.ok) {\n    throw new TurretHttpError(await response.text());\n  }\n\n  const tmpFunction = await response.json();\n  tmpFunction.txFunction = tmpFunction.function;\n  delete tmpFunction.function;\n\n  return tmpFunction as Promise<ITxFunction>;\n}\n\nexport async function runTxFunction(\n  turretsUrl: string[],\n  txFunctionHash: string,\n  txFunctionParams: Record<string, string>,\n  xdrToken: string,\n  network: string\n): Promise<string> {\n  const fetchTxFunctions = turretsUrl.map((turretUrl) =>\n    fetch(`${turretUrl}/tx-functions/${txFunctionHash}`, {\n      method: \"POST\",\n      body: JSON.stringify(txFunctionParams),\n      headers: {\n        Authorization: `Bearer ${xdrToken}`,\n      },\n    }).then((r) => r.json())\n  );\n\n  const xdrs = await Promise.all(fetchTxFunctions);\n\n  try {\n    const transaction = new Transaction(\n      xdrs[0].xdr,\n      getStellarPassphrase(network)\n    );\n    xdrs.forEach((xdr) => {\n      transaction.addSignature(xdr.signer, xdr.signature);\n    });\n    return transaction.toXDR();\n  } catch (e) {\n    throw new TurretHttpError(JSON.stringify(xdrs));\n  }\n}\n","import Field from \"./Contracts/Field\";\nimport ITxFunction from \"./ITxFunction\";\n\nexport default class TxFunction implements ITxFunction {\n  public constructor(\n    public txFunction: string,\n    public fields: Field[],\n    public signer: string\n  ) {}\n\n  public static createNull(): ITxFunction {\n    return new TxFunction(\"\", [], \"\");\n  }\n}\n","<template>\n  <div class=\"turrets my-5\">\n    <div class=\"flex flex-col my-5\">\n      <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n        <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n          <div\n            class=\"\n              shadow\n              overflow-hidden\n              border-b border-gray-200\n              sm:rounded-lg\n            \"\n          >\n            <table class=\"min-w-full divide-y divide-gray-200\">\n              <thead class=\"bg-gray-50\">\n                <tr>\n                  <th\n                    class=\"\n                      px-6\n                      py-3\n                      text-left text-xs\n                      font-medium\n                      text-gray-500\n                      uppercase\n                      tracking-wider\n                    \"\n                    scope=\"col\"\n                  >\n                    Url\n                  </th>\n                </tr>\n              </thead>\n              <tbody class=\"bg-white divide-y divide-gray-200\">\n                <tr v-for=\"url in turretsUrls\" :key=\"url\">\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {{ url }}\n                  </td>\n                  <td\n                    class=\"\n                      px-6\n                      py-4\n                      whitespace-nowrap\n                      text-right text-sm\n                      font-medium\n                    \"\n                  >\n                    <a\n                      class=\"text-indigo-600 hover:text-indigo-900 mr-2\"\n                      href=\"#\"\n                      @click.prevent=\"editTurretUrl(url)\"\n                      >Edit</a\n                    >\n                    <a\n                      class=\"text-indigo-600 hover:text-indigo-900\"\n                      href=\"#\"\n                      @click.prevent=\"deleteTurretUrl(url)\"\n                      >Delete</a\n                    >\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport { PropType } from \"vue\";\nimport AppInput from \"@/components/common/form/AppInput.vue\";\nimport AppButton from \"@/components/common/AppButton.vue\";\n\n@Options({\n  components: { AppButton, AppInput },\n  emits: [\"onEditTurretUrl\", \"onDeleteTurretUrl\"],\n  props: {\n    turretsUrls: {\n      type: Array as PropType<string[]>,\n    },\n  },\n})\nexport default class TurretUrlList extends Vue {\n  editTurretUrl(url: string): void {\n    this.$emit(\"onEditTurretUrl\", url);\n  }\n\n  deleteTurretUrl(url: string): void {\n    this.$emit(\"onDeleteTurretUrl\", url);\n  }\n}\n</script>\n","\nimport { Options, Vue } from \"vue-class-component\";\nimport { PropType } from \"vue\";\nimport AppInput from \"@/components/common/form/AppInput.vue\";\nimport AppButton from \"@/components/common/AppButton.vue\";\n\n@Options({\n  components: { AppButton, AppInput },\n  emits: [\"onEditTurretUrl\", \"onDeleteTurretUrl\"],\n  props: {\n    turretsUrls: {\n      type: Array as PropType<string[]>,\n    },\n  },\n})\nexport default class TurretUrlList extends Vue {\n  editTurretUrl(url: string): void {\n    this.$emit(\"onEditTurretUrl\", url);\n  }\n\n  deleteTurretUrl(url: string): void {\n    this.$emit(\"onDeleteTurretUrl\", url);\n  }\n}\n","import { render } from \"./TurretUrlList.vue?vue&type=template&id=6c5fdf98\"\nimport script from \"./TurretUrlList.vue?vue&type=script&lang=ts\"\nexport * from \"./TurretUrlList.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { Options, Vue } from \"vue-class-component\";\nimport AppButton from \"@/components/common/AppButton.vue\";\nimport AppInput from \"@/components/common/form/AppInput.vue\";\nimport Card from \"@/components/common/Card.vue\";\nimport { getTxFunction, runTxFunction } from \"@/services/turret/function\";\nimport TxFunction from \"@/entities/TxFunction\";\nimport JsonTreeView from \"@/components/common/JsonTreeView.vue\";\nimport TurretFieldsTable from \"@/components/turret/contracts/TurretFieldsTable.vue\";\nimport TurretUrlList from \"@/components/turret/contracts/TurretUrlList.vue\";\nimport TurretHttpError from \"@/errors/TurretHttpError\";\nimport { generateXdr } from \"@/services/turret/turret\";\n\n@Options({\n  components: {\n    TurretFieldsTable,\n    AppButton,\n    AppInput,\n    Card,\n    JsonTreeView,\n    TurretUrlList,\n  },\n})\nexport default class TxFunctions extends Vue {\n  private txFunctionHash = \"\";\n  private txFunction = TxFunction.createNull();\n  private getTxFunctionError = \"\";\n  private turretsUrls: string[] = [];\n  private txFunctionRunParams = {};\n  private xdrToken = \"\";\n  private resultingTxRunXdr = \"\";\n  private editableTurretUrl = \"\";\n  private editIndex = 0;\n  private isEditingTurretUrl = false;\n  private isCreatingXdr = false;\n  private isRunning = false;\n  private isFetching = false;\n\n  async getTxFunction(): Promise<void> {\n    this.isFetching = true;\n    this.getTxFunctionError = \"\";\n    const turret = this.$store.state.turret;\n    try {\n      this.txFunction = await getTxFunction(turret, this.txFunctionHash);\n    } catch (error) {\n      this.getTxFunctionError = error;\n    }\n    this.isFetching = false;\n  }\n\n  saveTurretUrl(): void {\n    if (!this.editableTurretUrl) {\n      return;\n    }\n\n    if (this.isEditingTurretUrl && this.editIndex !== -1) {\n      this.turretsUrls[this.editIndex] = this.editableTurretUrl;\n    } else {\n      this.turretsUrls = [...this.turretsUrls, this.editableTurretUrl];\n    }\n    this.editableTurretUrl = \"\";\n    this.isEditingTurretUrl = false;\n  }\n\n  editTurretUrl(url: string): void {\n    this.editableTurretUrl = url;\n    this.editIndex = this.turretsUrls.indexOf(url);\n    this.isEditingTurretUrl = true;\n  }\n\n  deleteTurretUrl(url: string): void {\n    for (let i = 0; i < this.turretsUrls.length; i++) {\n      if (this.turretsUrls[i] === url) {\n        this.turretsUrls.splice(i, 1);\n      }\n    }\n  }\n\n  async runTxFunction(): Promise<void> {\n    this.isRunning = true;\n    const finalTurretUrls = [...this.turretsUrls];\n    finalTurretUrls.push(this.$store.state.turret.url);\n\n    try {\n      this.resultingTxRunXdr = await runTxFunction(\n        finalTurretUrls,\n        this.txFunctionHash,\n        this.txFunctionRunParams,\n        this.xdrToken,\n        this.$store.state.turret.network\n      );\n    } catch (e) {\n      this.resultingTxRunXdr = e.message;\n      if (e instanceof TurretHttpError) {\n        this.resultingTxRunXdr = e.json;\n      }\n    }\n\n    this.isRunning = false;\n  }\n\n  async createXdr(): Promise<void> {\n    this.isCreatingXdr = true;\n    this.xdrToken = await generateXdr(\n      this.$store.state.turret,\n      this.$store.getters.keypair,\n      \"false\",\n      300,\n      [this.txFunctionHash]\n    );\n    this.isCreatingXdr = false;\n  }\n}\n","import { render } from \"./TxFunctions.vue?vue&type=template&id=419e368e\"\nimport script from \"./TxFunctions.vue?vue&type=script&lang=ts\"\nexport * from \"./TxFunctions.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory, RouteRecordRaw } from \"vue-router\";\nimport UploadContract from \"@/views/UploadContract.vue\";\nimport CreateXdrToken from \"@/views/CreateXdrToken.vue\";\nimport ManageTurretFunds from \"@/views/ManageTurretFunds.vue\";\nimport TxFunctions from \"@/views/TxFunctions.vue\";\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: \"/\",\n    name: \"Upload contract\",\n    component: UploadContract,\n  },\n  {\n    path: \"/xdr-token\",\n    name: \"Manage xdr token\",\n    component: CreateXdrToken,\n  },\n  {\n    path: \"/turret-funds\",\n    name: \"Manage turret funds\",\n    component: ManageTurretFunds,\n  },\n  {\n    path: \"/tx-functions\",\n    name: \"View and run functions\",\n    component: TxFunctions,\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nexport default router;\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport store from \"./store\";\nimport router from \"./router\";\n\ncreateApp(App).use(store).use(router).mount(\"#app\");\n"],"sourceRoot":""}